// ユーザ定義セクション
{
module Ch4.Lex.Lexer

open System
open FSharp.Text.Lexing
open Ch4.Lex.Token

let lexeme = LexBuffer<_>.LexemeString
}

// 補助定義セクション
let alpha = ['a'-'z'] | ['A'-'Z']
let digit = ['0'-'9']
let id = alpha (alpha | digit)*
let num = digit+
let frac = "." num
let exp = ['e' 'E'] ("-"?) num
let real = ("-"?) ((num frac? exp) | (num frac exp?))
let ws = ' ' | "\t" | "\n" | "\r\n" | "\r"
let dquote = "\"" [^'\"']* "\""

// 正規表現定義セクション
rule main = parse
    | dquote
        {
            lexbuf
            |> lexeme
            |> fun x -> x.Substring(1, x.Length - 2) // 先頭と末尾のダブルクォートを除去
            |> Token.STRING
        }
    | "_" { Token.UNDERBAR }
    | id { lexeme lexbuf |> Token.ID }
    | real { lexeme lexbuf |> Token.REAL }
    | ws { main lexbuf } // スペースを無視して再帰呼び出し
    | eof { exit 0 }
    | _ { lexeme lexbuf |> Token.SPECIAL }
